<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Marin&#39;s Blog</title>
  
  <subtitle>不学习你和咸鱼有什么区别</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://marin.kim/"/>
  <updated>2021-03-02T14:01:33.103Z</updated>
  <id>http://marin.kim/</id>
  
  <author>
    <name>Marin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从今往后，请给生活插上翅膀</title>
    <link href="http://marin.kim/2021/03/01/%E4%BB%8E%E4%BB%8A%E5%BE%80%E5%90%8E%EF%BC%8C%E8%AF%B7%E7%BB%99%E7%94%9F%E6%B4%BB%E6%8F%92%E4%B8%8A%E7%BF%85%E8%86%80/"/>
    <id>http://marin.kim/2021/03/01/从今往后，请给生活插上翅膀/</id>
    <published>2021-03-01T13:23:26.840Z</published>
    <updated>2021-03-02T14:01:33.103Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思想死在生活之前"><a href="#思想死在生活之前" class="headerlink" title="思想死在生活之前"></a>思想死在生活之前</h2><p>Hello，已经两年多没更新博客啦，虽然没有人看，但是还是决定今后持续更新，算是记录一下自己的生活吧，不想做一个随波逐流的人。</p><p>毕业两年了，到现在唯一的感觉就是时间真的会改变一个人，感觉很多想法已经和之前不一样啦，爱情、财富、生活也在时不时困扰着我。小时候总向往自由，自己喜欢什么就做什么，但毕业后自由却离我越来越远了，做为家里的独生子，身上的责任是我无法忽视的，而且我也意识到了没有责任心地生活就意味着，使自己退化为一个无力的牺牲品，意味着按照别人为你谱写的剧本来生活，这才是我不能接受的。也许自由只是人类的美好向往，也可能就像书里说的那样：自由意味着，自律地去执行我计划好的事情。”</p><p>写下这段话目的，是希望我能不改初衷，以后迷茫的时候看到这段话不管什么处境都能够面对而不是逃避。希望从今往后，对于家人能够尽我最大的耐心，对于爱情能够充满想象力，对于身边朋友我衷心祝愿他们变得越来越好，对于社会我会尽我最大的善意，并在力所能及的情况下给予他人帮助。</p><p>最后，引用死亡诗社的一句台词，“Carpe diem”，一成不变的思想而不是生活，共勉。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思想死在生活之前&quot;&gt;&lt;a href=&quot;#思想死在生活之前&quot; class=&quot;headerlink&quot; title=&quot;思想死在生活之前&quot;&gt;&lt;/a&gt;思想死在生活之前&lt;/h2&gt;&lt;p&gt;Hello，已经两年多没更新博客啦，虽然没有人看，但是还是决定今后持续更新，算是记录一下自己
      
    
    </summary>
    
      <category term="Daily" scheme="http://marin.kim/categories/Daily/"/>
    
    
      <category term="Daily" scheme="http://marin.kim/tags/Daily/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse SpringBoot框架搭建</title>
    <link href="http://marin.kim/2018/09/04/SpringBoot%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    <id>http://marin.kim/2018/09/04/SpringBoot框架搭建/</id>
    <published>2018-09-04T09:34:53.021Z</published>
    <updated>2018-09-05T03:08:48.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>之前一直用<code>IDEA</code>搭建SpringBoot框架比较简单方便，因为现在公司规定用<code>Eclipse</code>编辑器，所以现在把Eclipse捡起来在用一下。😇😇<br><code>Eclipse + Maven + SpringBoot + SpringJDBC + MiniUI(前台框架)</code><br>之所以用MiniUI，是因为公司前端用的是这个框架，其实用其他框架也是一样，在做项目时尽量实现前后端分离。</p><h2 id="Eclipse安装SpringBoot"><a href="#Eclipse安装SpringBoot" class="headerlink" title="Eclipse安装SpringBoot"></a>Eclipse安装SpringBoot</h2><p>请在<code>Eclipse -&gt; Eclipse Marketplace</code>中搜索SpringBoot安装。或者去官网自行安装。</p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://marin-image-upyun.test.upcdn.net/blog_image/blog/sbootdic.jpg" alt="SpringBoot项目结构" title="">                </div>                <div class="image-caption">SpringBoot项目结构</div>            </figure><p>一般情况下我们将代码放在<code>src-&gt;main-&gt;java</code>下,资源文件放在<code>src-&gt;main-&gt;resources</code></p><h2 id="框架搭建"><a href="#框架搭建" class="headerlink" title="框架搭建"></a>框架搭建</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;之前一直用&lt;code&gt;IDEA&lt;/code&gt;搭建SpringBoot框架比较简单方便，因为现在公司规定用&lt;code&gt;Eclipse&lt;/cod
      
    
    </summary>
    
      <category term="Java" scheme="http://marin.kim/categories/Java/"/>
    
    
      <category term="Java" scheme="http://marin.kim/tags/Java/"/>
    
      <category term="Framework" scheme="http://marin.kim/tags/Framework/"/>
    
  </entry>
  
  <entry>
    <title>Mac下打造优美的终端</title>
    <link href="http://marin.kim/2018/09/01/%E6%89%93%E9%80%A0%E4%BC%98%E7%BE%8E%E7%9A%84mac%E7%BB%88%E7%AB%AF/"/>
    <id>http://marin.kim/2018/09/01/打造优美的mac终端/</id>
    <published>2018-09-01T07:14:09.187Z</published>
    <updated>2018-09-01T07:15:54.554Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>首先呢Mac终端是我们每天都要用到的(对于程序员🤒来说),虽然比windows下终端颜值高了些，而且还有许多自定义的调节(透明度，ANSI等等)，但是还是很丑。。。<br>我自己参考了一些教程，最后做出来效果是这样的<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://marin-image-upyun.test.upcdn.net/blog_image/blog/mac-iterm2.jpg" alt="效果图" title="">                </div>                <div class="image-caption">效果图</div>            </figure></p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>首先开始之前，你必须要学会基本的Linux操作命令，如<code>ls、vim</code>之类的，下面用的命令都很简单。在者你需要安装一些东西，如<code>pip、git</code></p><h3 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h3><p>命令：<br><code>sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code><br>很抱歉，忘了截图了😂。一般只有网络通畅应该没问题。官网在<a href="https://ohmyz.sh" target="_blank" rel="noopener">这里</a>。<br>如果你安装不上，可以去官网试一下其他方法。</p><h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><p>我们需要修改.zshrc这个文件，将主题修改成agnoster,<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes" target="_blank" rel="noopener">官网主题</a>自己可以看看。<br>命令：<code>vim ~/.zshrc</code><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://marin-image-upyun.test.upcdn.net/blog_image/blog/mac-iterm.png" alt="修改主题" title="">                </div>                <div class="image-caption">修改主题</div>            </figure></p><h3 id="配置字体"><a href="#配置字体" class="headerlink" title="配置字体"></a>配置字体</h3><p>现在打开终端应该乱码了，我们需要下载安装<code>Powerlin</code>字体。<br>我们用<code>pip</code>安装，没有的先装一下<code>pip</code>，命令：<code>sudo easy_install pip</code><br>安装<code>Powerlin</code>命令：<code>pip install powerline-status</code><br>PS: 这里新版Mac使用pip可以报错，解决看<a href="https://www.jianshu.com/p/a02b390d86a4" target="_blank" rel="noopener">这里</a>。</p><p>下载安装字体库：<br><code>git clone https://github.com/powerline/fonts ~/Downloads/github</code><br><code>cd ~/Downloads/fonts</code><br><code>./install.sh</code></p><h2 id="配置终端"><a href="#配置终端" class="headerlink" title="配置终端"></a>配置终端</h2><p>快捷键<code>command+,</code>打开终端设置。<br>配置好字体后就不会乱码了，字体需要带<code>powerlin</code>字样<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://marin-image-upyun.test.upcdn.net/blog_image/blog/mac-iterm3.png" alt="终端" title="">                </div>                <div class="image-caption">终端</div>            </figure><br>其他的可以参考图片配置<br>ANSI颜色配置：</p><table><thead><tr><th>#000000</th><th>#FF7E79</th><th>#1DBB9A</th><th>#FEF034</th><th>#69AEF8</th><th>#A665A5</th><th>#1DAFEC</th><th>#C7C7C7</th></tr></thead><tbody><tr><td>#666666</td><td>#FD6D71</td><td>#3CC5AA</td><td>#FEFB67</td><td>#69AEF8</td><td>#EE6FA9</td><td>#468CC8</td><td>#FFFFFF</td></tr></tbody></table><p>最后，透明度50%,去掉模糊。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>好了，是不是美滋滋。😇</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;首先呢Mac终端是我们每天都要用到的(对于程序员🤒来说),虽然比windows下终端颜值高了些，而且还有许多自定义的调节(透明度，ANSI
      
    
    </summary>
    
      <category term="Util" scheme="http://marin.kim/categories/Util/"/>
    
    
      <category term="Util" scheme="http://marin.kim/tags/Util/"/>
    
  </entry>
  
  <entry>
    <title>Eclipse Spring MVC项目搭建</title>
    <link href="http://marin.kim/2018/08/24/Spring%20MVC/"/>
    <id>http://marin.kim/2018/08/24/Spring MVC/</id>
    <published>2018-08-24T08:18:27.417Z</published>
    <updated>2018-09-05T02:58:40.625Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>今天早上搭建了一下SpringMVC的框架写了一个小项目，遇到了一些问题，在此回顾一下。<br>项目环境:<br><code>Eclipse + Maven + SpringMVC + SpringJDBC + MiniUi(前台框架)</code><br>PS: 你的Eclipse需要安装Spring插件🤧</p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://marin-image-upyun.test.upcdn.net/blog_image/blog/springmvc目录结构.png" alt="SpringMVC项目结构" title="">                </div>                <div class="image-caption">SpringMVC项目结构</div>            </figure><h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><p>好了，接下来我们一步步搭建项目</p><h3 id="创建maven项目"><a href="#创建maven项目" class="headerlink" title="创建maven项目"></a>创建maven项目</h3><p>首先创建maven项目 <code>File -&gt; New -&gt; Maven Project</code><br>引入maven依赖包,<code>pom.xml</code>内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.epoint<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>SMVC<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>SMVC Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.apache.org<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- servlet --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mysql 链接 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- durid连接池 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- fastjson --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.43<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- spring mvc依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- spring jdbc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.8.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">finalName</span>&gt;</span>SMVC<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">port</span>&gt;</span>9090<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">path</span>&gt;</span>/$&#123;project.artifactId&#125;<span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uriEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">uriEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span>tomcat7<span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>完成后跟新一下项目，如果maven报错，看报错信息，如果提示缺少<code>web.xml</code>就自己在<code>webapp -&gt; WEB-INF -&gt; web.xml</code>创建<br>另外或许会报<code>Cannot change version of project facet Dynamic web module to 3.0</code>这个错误，解决请看<a href="https://www.cnblogs.com/tf-Y/p/4928897.html" target="_blank" rel="noopener">这里</a>。</p><h3 id="配置web-xml"><a href="#配置web-xml" class="headerlink" title="配置web.xml"></a>配置web.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:web</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span></span></span><br><span class="line"><span class="tag"><span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果不理解配置含义的，可以自行百度，这里就不详细说了。😷</p><h3 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h3><p>如上图的目录结构，我们需要创建SpringMvc的配置文件<code>applicationContext.xml</code>和放置数据源配置信息的文件<code>jdbc.properties</code><br>applicationContext.xml的内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span> </span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans/spring-beans-3.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/context/spring-context-3.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc </span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 搜索spring控件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.epoint"</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载配置文件 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span> /&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 配置Druid数据源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"ds"</span> <span class="attr">class</span>=<span class="string">"com.alibaba.druid.pool.DruidDataSource"</span> <span class="attr">destroy-method</span>=<span class="string">"close"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driver&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxActive"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.maxActive&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.initialSize&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minIdle"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.minIdle&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"timeBetweenEvictionRunsMillis"</span>     <span class="attr">value</span>=<span class="string">"$&#123;jdbc.timeBetweenEvictionRunsMillis&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"minEvictableIdleTimeMillis"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.minEvictableIdleTimeMillis&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"testOnBorrow"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.testOnBorrow&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"validationQuery"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.validationQuery&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 后续配置可以继续添加 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment">&lt;!-- 配置Jdbc模板 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"jdbcTemplate"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.core.JdbcTemplate"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"ds"</span>/&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/pages/**"</span> <span class="attr">location</span>=<span class="string">"/pages/"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/scripts/**"</span> <span class="attr">location</span>=<span class="string">"/scripts/"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/res/**"</span> <span class="attr">location</span>=<span class="string">"/res/"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:resources</span> <span class="attr">mapping</span>=<span class="string">"/data/**"</span> <span class="attr">location</span>=<span class="string">"/data/"</span> /&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">        </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这里解释一下<code>&lt;mvc:resources/&gt;</code>，因为我的项目页面是纯静态的HTML页面，不是jsp页面，所以这边要对静态资源放行，因为MiniUi的资源在scripts和res目录下所以这边配置了。其他情况也要自己看情况配置。<br>jdbc.properties文件内容<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#数据库驱动</span><br><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">#数据库的连接字符串</span><br><span class="line">jdbc.url=jdbc:mysql://127.0.0.1:3306/test??useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false</span><br><span class="line">#用户名</span><br><span class="line">jdbc.username=root</span><br><span class="line">#密码</span><br><span class="line">jdbc.password=？？？？</span><br><span class="line"></span><br><span class="line">#druid配置信息</span><br><span class="line">jdbc.initialSize=5</span><br><span class="line">jdbc.maxActive=10</span><br><span class="line">jdbc.minIdle=5</span><br><span class="line">jdbc.maxIdle=10</span><br><span class="line">jdbc.timeBetweenEvictionRunsMillis=3600000</span><br><span class="line">jdbc.minEvictableIdleTimeMillis=3600000</span><br><span class="line">jdbc.testOnBorrow=true</span><br><span class="line">jdbc.validationQuery=SELECT 1 FROM DUAL</span><br></pre></td></tr></table></figure></p><h3 id="简单的demo"><a href="#简单的demo" class="headerlink" title="简单的demo"></a>简单的demo</h3><p>到了这里项目框架已经搭好了，我们来写一个简单的demo来验证。<br>我们来完成一个前台<code>MiniUi</code>用<code>DataGrid</code>重后台获取数据的demo。<br>Dao层的接口实现方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.epoint.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.epoint.dao.StudentInfoDao;</span><br><span class="line"><span class="keyword">import</span> com.epoint.domain.StudentInfo;</span><br><span class="line"><span class="keyword">import</span> com.epoint.util.StringUtil;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentInfoDaoImpl</span> <span class="keyword">implements</span> <span class="title">StudentInfoDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;StudentInfo&gt; <span class="title">getAllStudentInfo</span><span class="params">(String key, <span class="keyword">int</span> startPage, <span class="keyword">int</span> endPage)</span> </span>&#123;</span><br><span class="line">String sql = <span class="keyword">null</span>;</span><br><span class="line">List&lt;StudentInfo&gt; stuInfo = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">int</span> actualhours = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (key != <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (StringUtil.isNumeric(key)) &#123;</span><br><span class="line">actualhours = Integer.parseInt(key);</span><br><span class="line">sql = <span class="string">"select * from studentinfo  where stuid = ? limit ?,?"</span>;</span><br><span class="line">stuInfo = jdbcTemplate.query(sql, <span class="keyword">new</span> Object[] &#123; actualhours, startPage, endPage &#125;,</span><br><span class="line"><span class="keyword">new</span> BeanPropertyRowMapper&lt;StudentInfo&gt;(StudentInfo.class));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">sql = <span class="string">"select * from studentinfo  where stuid = ? limit ?,?"</span>;</span><br><span class="line">stuInfo = jdbcTemplate.query(sql, <span class="keyword">new</span> Object[] &#123; key, startPage, endPage &#125;,</span><br><span class="line"><span class="keyword">new</span> BeanPropertyRowMapper&lt;StudentInfo&gt;(StudentInfo.class));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">sql = <span class="string">"select * from studentinfo  limit ?,?"</span>;</span><br><span class="line">stuInfo = jdbcTemplate.query(sql, <span class="keyword">new</span> Object[] &#123; startPage, endPage &#125;,</span><br><span class="line"><span class="keyword">new</span> BeanPropertyRowMapper&lt;StudentInfo&gt;(StudentInfo.class));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> != stuInfo &amp;&amp; stuInfo.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> stuInfo;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getStudentInfoTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String sql = <span class="string">"select count(*) from studentinfo"</span>;</span><br><span class="line"><span class="keyword">return</span> jdbcTemplate.queryForObject(sql, Integer.class);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">addSutdentInfo</span><span class="params">(StudentInfo studentInfo)</span> </span>&#123;</span><br><span class="line">String sql = <span class="string">"insert into studentinfo values (?,?,?,?,?,?,?,?)"</span>;</span><br><span class="line"><span class="keyword">return</span> jdbcTemplate.update(sql,</span><br><span class="line"><span class="keyword">new</span> Object[] &#123; studentInfo.getStuID(), studentInfo.getStuName(), studentInfo.getProfession(),</span><br><span class="line">studentInfo.getAddDate(), studentInfo.getSex(), studentInfo.getIdNum(),</span><br><span class="line">studentInfo.getTotalScore(), studentInfo.getNote() &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>service层的接口实现方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.epoint.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.epoint.dao.StudentInfoDao;</span><br><span class="line"><span class="keyword">import</span> com.epoint.domain.StudentInfo;</span><br><span class="line"><span class="keyword">import</span> com.epoint.service.StudentInfoService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentInfoServiceImpl</span> <span class="keyword">implements</span> <span class="title">StudentInfoService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StudentInfoDao stuInfoDao;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;StudentInfo&gt; <span class="title">getAllStudentInfo</span><span class="params">(String key, <span class="keyword">int</span> startPage, <span class="keyword">int</span> endPage)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> stuInfoDao.getAllStudentInfo(key, startPage, endPage);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getStudentInfoTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> stuInfoDao.getStudentInfoTotal();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">addSutdentInfo</span><span class="params">(StudentInfo studentInfo)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 添加id和学分</span></span><br><span class="line">studentInfo.setStuID(UUID.randomUUID().toString());</span><br><span class="line">studentInfo.setTotalScore(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">a = stuInfoDao.addSutdentInfo(studentInfo);</span><br><span class="line"><span class="keyword">if</span> (a == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Controller层的实现：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.epoint.domain.StudentInfo;</span><br><span class="line"><span class="keyword">import</span> com.epoint.service.StudentInfoService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/studentinfo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentInfoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StudentInfoService stuInfoService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/addstu"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addStudentInfo</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">resp.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">Result rs = <span class="keyword">new</span> Result();</span><br><span class="line">String json = req.getParameter(<span class="string">"data"</span>);</span><br><span class="line">System.out.println(json);</span><br><span class="line">StudentInfo stuInfo = JSON.parseObject(json, StudentInfo.class);</span><br><span class="line"><span class="keyword">boolean</span> a = <span class="keyword">false</span>;</span><br><span class="line">a = stuInfoService.addSutdentInfo(stuInfo);</span><br><span class="line"><span class="keyword">if</span> (a) &#123;</span><br><span class="line">rs.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">resp.getWriter().write(JSON.toJSONString(rs));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/list"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">studentInfoList</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">resp.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页</span></span><br><span class="line"><span class="keyword">int</span> pageIndex = Integer.parseInt(req.getParameter(<span class="string">"pageIndex"</span>));</span><br><span class="line"><span class="keyword">int</span> pageSize = Integer.parseInt(req.getParameter(<span class="string">"pageSize"</span>));</span><br><span class="line"><span class="keyword">int</span> start = pageIndex * pageSize;</span><br><span class="line"><span class="keyword">int</span> end = start + pageSize;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 搜索</span></span><br><span class="line">String key = req.getParameter(<span class="string">"key"</span>);</span><br><span class="line"></span><br><span class="line">List&lt;StudentInfo&gt; ls = <span class="keyword">new</span> ArrayList&lt;StudentInfo&gt;();</span><br><span class="line">ls = stuInfoService.getAllStudentInfo(key, start, end);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> total = stuInfoService.getStudentInfoTotal();</span><br><span class="line"></span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"><span class="keyword">if</span> (ls == <span class="keyword">null</span>) &#123;</span><br><span class="line">map.put(<span class="string">"total"</span>, <span class="keyword">null</span>);</span><br><span class="line">map.put(<span class="string">"data"</span>, <span class="keyword">null</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">map.put(<span class="string">"total"</span>, total);</span><br><span class="line">map.put(<span class="string">"data"</span>, ls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp.getWriter().write(JSON.toJSONString(map));</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.epoint.domain.StudentInfo;</span><br><span class="line"><span class="keyword">import</span> com.epoint.service.StudentInfoService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/studentinfo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentInfoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> StudentInfoService stuInfoService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/addstu"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addStudentInfo</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">resp.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">Result rs = <span class="keyword">new</span> Result();</span><br><span class="line">String json = req.getParameter(<span class="string">"data"</span>);</span><br><span class="line">System.out.println(json);</span><br><span class="line">StudentInfo stuInfo = JSON.parseObject(json, StudentInfo.class);</span><br><span class="line"><span class="keyword">boolean</span> a = <span class="keyword">false</span>;</span><br><span class="line">a = stuInfoService.addSutdentInfo(stuInfo);</span><br><span class="line"><span class="keyword">if</span> (a) &#123;</span><br><span class="line">rs.setSuccess(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">resp.getWriter().write(JSON.toJSONString(rs));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/list"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">studentInfoList</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">resp.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 分页</span></span><br><span class="line"><span class="keyword">int</span> pageIndex = Integer.parseInt(req.getParameter(<span class="string">"pageIndex"</span>));</span><br><span class="line"><span class="keyword">int</span> pageSize = Integer.parseInt(req.getParameter(<span class="string">"pageSize"</span>));</span><br><span class="line"><span class="keyword">int</span> start = pageIndex * pageSize;</span><br><span class="line"><span class="keyword">int</span> end = start + pageSize;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 搜索</span></span><br><span class="line">String key = req.getParameter(<span class="string">"key"</span>);</span><br><span class="line"></span><br><span class="line">List&lt;StudentInfo&gt; ls = <span class="keyword">new</span> ArrayList&lt;StudentInfo&gt;();</span><br><span class="line">ls = stuInfoService.getAllStudentInfo(key, start, end);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> total = stuInfoService.getStudentInfoTotal();</span><br><span class="line"></span><br><span class="line">Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line"><span class="keyword">if</span> (ls == <span class="keyword">null</span>) &#123;</span><br><span class="line">map.put(<span class="string">"total"</span>, <span class="keyword">null</span>);</span><br><span class="line">map.put(<span class="string">"data"</span>, <span class="keyword">null</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">map.put(<span class="string">"total"</span>, total);</span><br><span class="line">map.put(<span class="string">"data"</span>, ls);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">resp.getWriter().write(JSON.toJSONString(map));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>好了接下来就是HTML的代码了<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>student list<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"../scripts/boot.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 按钮事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:800px;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mini-toolbar"</span> <span class="attr">style</span>=<span class="string">"border-bottom:0;padding:0px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">style</span>=<span class="string">"width:100%;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"width:100%;"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mini-button"</span> <span class="attr">iconCls</span>=<span class="string">"icon-add"</span> <span class="attr">onclick</span>=<span class="string">"add()"</span>&gt;</span>增加<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mini-button"</span> <span class="attr">iconCls</span>=<span class="string">"icon-add"</span> <span class="attr">onclick</span>=<span class="string">"edit()"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mini-button"</span> <span class="attr">iconCls</span>=<span class="string">"icon-remove"</span> <span class="attr">onclick</span>=<span class="string">"remove()"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span>       </span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"white-space:nowrap;"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"key"</span> <span class="attr">class</span>=<span class="string">"mini-textbox"</span> <span class="attr">emptyText</span>=<span class="string">"请输入姓名"</span> <span class="attr">style</span>=<span class="string">"width:150px;"</span> <span class="attr">onenter</span>=<span class="string">"onKeyEnter"</span>/&gt;</span>   </span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"mini-button"</span> <span class="attr">onclick</span>=<span class="string">"search()"</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span>           </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表格展示 sizeList="[10,20,30,40]" --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"datagrid1"</span> <span class="attr">class</span>=<span class="string">"mini-datagrid"</span> <span class="attr">style</span>=<span class="string">"width:800px;height:280px;"</span> <span class="attr">allowResize</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">url</span>=<span class="string">"../../SMVC/studentinfo/list"</span>  <span class="attr">idField</span>=<span class="string">"id"</span> <span class="attr">multiSelect</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">property</span>=<span class="string">"columns"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 复选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">type</span>=<span class="string">"checkcolumn"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">type</span>=<span class="string">"indexcolumn"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">field</span>=<span class="string">"stuID"</span>   <span class="attr">headerAlign</span>=<span class="string">"center"</span> <span class="attr">allowSort</span>=<span class="string">"true"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">field</span>=<span class="string">"stuName"</span>  <span class="attr">headerAlign</span>=<span class="string">"center"</span> <span class="attr">allowSort</span>=<span class="string">"true"</span>&gt;</span>学生姓名<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">field</span>=<span class="string">"profession"</span>  <span class="attr">headerAlign</span>=<span class="string">"center"</span> <span class="attr">allowSort</span>=<span class="string">"true"</span>&gt;</span>专业<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">field</span>=<span class="string">"addDate"</span>   <span class="attr">headerAlign</span>=<span class="string">"center"</span> <span class="attr">allowSort</span>=<span class="string">"true"</span> <span class="attr">dateFormat</span>=<span class="string">"yyyy-MM-dd"</span>&gt;</span>入学日期<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">field</span>=<span class="string">"sex"</span>  <span class="attr">headerAlign</span>=<span class="string">"center"</span> <span class="attr">allowSort</span>=<span class="string">"true"</span>&gt;</span>性别<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">field</span>=<span class="string">"idNum"</span> <span class="attr">headerAlign</span>=<span class="string">"center"</span> <span class="attr">allowSort</span>=<span class="string">"true"</span>&gt;</span>身份证<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">field</span>=<span class="string">"totalScore"</span>  <span class="attr">headerAlign</span>=<span class="string">"center"</span> <span class="attr">allowSort</span>=<span class="string">"true"</span>&gt;</span>总学分<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">field</span>=<span class="string">"note"</span>  <span class="attr">headerAlign</span>=<span class="string">"center"</span> <span class="attr">allowSort</span>=<span class="string">"true"</span>&gt;</span>说明<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">mini.parse();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">var grid = mini.get("datagrid1");</span></span><br><span class="line"><span class="undefined">grid.load();</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="实现的效果图"><a href="#实现的效果图" class="headerlink" title="实现的效果图"></a>实现的效果图</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://marin-image-upyun.test.upcdn.net//blog_image/blog/springmvc-mi.png" alt="效果图" title="">                </div>                <div class="image-caption">效果图</div>            </figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>好了，项目已经搭好了，下一篇准备发搭建Spring Boot框架的教程，真的很好用。🧐</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;今天早上搭建了一下SpringMVC的框架写了一个小项目，遇到了一些问题，在此回顾一下。&lt;br&gt;项目环境:&lt;br&gt;&lt;code&gt;Eclipse
      
    
    </summary>
    
      <category term="Java" scheme="http://marin.kim/categories/Java/"/>
    
    
      <category term="Java" scheme="http://marin.kim/tags/Java/"/>
    
      <category term="Framework" scheme="http://marin.kim/tags/Framework/"/>
    
  </entry>
  
  <entry>
    <title>Mac下安装激活Eclipse JRebel插件</title>
    <link href="http://marin.kim/2018/08/22/%E6%BF%80%E6%B4%BBEclipse%20JRebel%E6%8F%92%E4%BB%B6/"/>
    <id>http://marin.kim/2018/08/22/激活Eclipse JRebel插件/</id>
    <published>2018-08-22T08:56:57.661Z</published>
    <updated>2018-08-23T06:57:21.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>我们做Java Web项目难免要用到JRebel插件，特别是大型的项目，但是这个插件是付费的，现在教大家破解JRebel。</p><p>Windows Eclipse破解JRebel网上教程很多，但是我查了一下基本木有看到Mac下的Eclipse破解JRebel，所以我才写了这篇博客，但是众所周知这东西具有时效性，时间长了或许就没用了。。。</p><h2 id="安装JRebel"><a href="#安装JRebel" class="headerlink" title="安装JRebel"></a>安装JRebel</h2><p>直接在Eclipse商店安装<code>help -&gt; Eclipse MarketPlace -&gt; JRebel -&gt; Install</code><br><a href="https://plugins.jetbrains.com/idea/plugin/4441-JRebel-for-intellij" target="_blank" rel="noopener">官网下载</a>，贼慢。。。😂</p><h2 id="破解JRebel"><a href="#破解JRebel" class="headerlink" title="破解JRebel"></a>破解JRebel</h2><p>使用反向代理破解JRebel，现在激活码注册已经没用了，我自己也试过很多方法，只有这种方法成功激活了。<br>一、下载大神的反向代理软件<a href="https://github.com/ilanyu/ReverseProxy/releases/latest" target="_blank" rel="noopener">GitHub</a></p><p>二、软件没有Mac的版本，我们下载64位Windows就行了，我是在我的Windows虚拟机运行的软件，如果没有只要在局域网内的电脑都可以,我们访问的是地址，如<a href="http://127.0.0.1:8888/Zephyr" target="_blank" rel="noopener">http://127.0.0.1:8888/Zephyr</a> （将127.0.0.1换成运行软件的电脑IP地址）</p><p>三、点击active jrebel（抱歉，我已经激活完了，没有图贴了😂），选择<code>License Server</code>激活，填写地址刚才的地址，邮箱随便填。<br><code>如果出现：“Incorrect license server group URL.Contact license sever administrator.”</code><br>请尝试下面地址：<br>可以尝试使用下面的激活地址：<br><a href="http://127.0.0.1:8888/88414687-3b91-4286-89ba-2dc813b107ce" target="_blank" rel="noopener">http://127.0.0.1:8888/88414687-3b91-4286-89ba-2dc813b107ce</a><br><a href="http://127.0.0.1:8888/ff47a3acc11e-4cb2-836b-9b2b26101696" target="_blank" rel="noopener">http://127.0.0.1:8888/ff47a3acc11e-4cb2-836b-9b2b26101696</a><br><a href="http://127.0.0.1:8888/11d221d1-5cf0-4557-b023-4b4adfeeb36a" target="_blank" rel="noopener">http://127.0.0.1:8888/11d221d1-5cf0-4557-b023-4b4adfeeb36a</a></p><p>四、激活成功不要着急关掉反向代理，打开<code>JRebel Configuration -&gt; overview -&gt; 点击work offline</code>变成我下面这样离线模式。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../../../media/jrebel/jrebel.png" alt="JRebel" title="">                </div>                <div class="image-caption">JRebel</div>            </figure></p><p>美滋滋，但是还是提醒大家如果有条件请使用正版插件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;我们做Java Web项目难免要用到JRebel插件，特别是大型的项目，但是这个插件是付费的，现在教大家破解JRebel。&lt;/p&gt;
&lt;p&gt;W
      
    
    </summary>
    
    
      <category term="Util" scheme="http://marin.kim/tags/Util/"/>
    
  </entry>
  
  <entry>
    <title>Java实现每日登陆增加积分功能</title>
    <link href="http://marin.kim/2018/04/09/Java%E5%AE%9E%E7%8E%B0%E6%AF%8F%E6%97%A5%E7%99%BB%E9%99%86%E5%A2%9E%E5%8A%A0%E7%A7%AF%E5%88%86%E5%8A%9F%E8%83%BD/"/>
    <id>http://marin.kim/2018/04/09/Java实现每日登陆增加积分功能/</id>
    <published>2018-04-09T07:04:52.629Z</published>
    <updated>2018-08-23T07:00:55.322Z</updated>
    
    <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>数据库中增加最后登陆时间的字段<code>（last_login_time）</code>，通过这个值与系统当前时间进行比较。</p><p>看到这应该明白了，只要登陆成功的时候执行判断这两个时间是否同一天就可以实现这个功能，如果是同一天我们就给他增加积分，不是我们就不加。</p><p>ps：要注意了，登陆成功的时候要更新最后一次登陆时间的，不然登陆一次就会加一次积分。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>这个方法最关键的就是判断同一天这个功能了，我们可以利用commons-lang3包中的isSameDay方法。</p><p><code>org.apache.commons.lang3.time.DateUtils.isSameDay(Date date1, Date date2)</code></p><p>我们来看<code>isSameDay方法</code>源代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSameDay</span><span class="params">(Date date1, Date date2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(date1 != <span class="keyword">null</span> &amp;&amp; date2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Calendar cal1 = Calendar.getInstance();</span><br><span class="line">            cal1.setTime(date1);</span><br><span class="line">            Calendar cal2 = Calendar.getInstance();</span><br><span class="line">            cal2.setTime(date2);</span><br><span class="line">            <span class="keyword">return</span> isSameDay(cal1, cal2);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The date must not be null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSameDay</span><span class="params">(Calendar cal1, Calendar cal2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(cal1 != <span class="keyword">null</span> &amp;&amp; cal2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> cal1.get(<span class="number">0</span>) == cal2.get(<span class="number">0</span>) &amp;&amp; cal1.get(<span class="number">1</span>) == cal2.get(<span class="number">1</span>) &amp;&amp; cal1.get(<span class="number">6</span>) == cal2.get(<span class="number">6</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The date must not be null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>上面方法中的0、1、6的含义如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> ERA = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Field number for &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; indicating the</span></span><br><span class="line"><span class="comment">     * year. This is a calendar-specific value; see subclass documentation.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> YEAR = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Field number for &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; indicating the day</span></span><br><span class="line"><span class="comment">     * number within the current year.  The first day of the year has value 1.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> DAY_OF_YEAR = <span class="number">6</span>;</span><br></pre></td></tr></table></figure><p>ps:利用是否是同一ERA（翻译成：世纪）且同一年的第N天来判断的。</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>在贴一个如何获得明天零点的代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCalendar</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            Date currentEndDate = <span class="keyword">new</span> Date();</span><br><span class="line">            Calendar cal = Calendar.getInstance();</span><br><span class="line">            cal.setTime(currentEndDate);</span><br><span class="line">            cal.add(Calendar.DATE, <span class="number">1</span>);</span><br><span class="line">            cal.set(Calendar.AM_PM, <span class="number">0</span>);</span><br><span class="line">            cal.set(Calendar.HOUR, <span class="number">0</span>);</span><br><span class="line">            cal.set(Calendar.MINUTE, <span class="number">0</span>);</span><br><span class="line">            cal.set(Calendar.SECOND, <span class="number">0</span>);</span><br><span class="line">            Date nextDate = cal.getTime();</span><br><span class="line"></span><br><span class="line">            System.out.println(nextDate);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;数据库中增加最后登陆时间的字段&lt;code&gt;（last_login_time）&lt;/code&gt;，通过这个值与系统当前时间进行比较。&lt;/p&gt;
&lt;p
      
    
    </summary>
    
      <category term="Java" scheme="http://marin.kim/categories/Java/"/>
    
    
      <category term="Java" scheme="http://marin.kim/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java IO流</title>
    <link href="http://marin.kim/2018/03/26/JavaIO/"/>
    <id>http://marin.kim/2018/03/26/JavaIO/</id>
    <published>2018-03-26T07:19:01.101Z</published>
    <updated>2018-08-23T07:01:06.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Java中对于数据的操作都是通过流来实现的，而所有操作流的对象都在IO包中。所谓IO流其实是指，Input和Output流。<br>首先明白<code>字节(Byte)</code>和<code>字符(Character)</code>的大小</p><ul><li>1 byte = 8 bit</li><li>1 char = 2 byte = 16 bit(Java默认UTF-16编码)</li></ul><p>详细请看下面关系图：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="../../../../media/io/io.jpeg" alt="IO图" title="">                </div>                <div class="image-caption">IO图</div>            </figure></p><h2 id="File对象"><a href="#File对象" class="headerlink" title="File对象"></a>File对象</h2><p>File对象用来描述操作系统中文件对象，可以是单个文件或是一个文件目录</p><h3 id="1-创建File对象"><a href="#1-创建File对象" class="headerlink" title="1.创建File对象"></a>1.创建File对象</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File file = <span class="keyword">new</span> File(<span class="string">"C:"</span> + File.separator+ <span class="string">"1.txt"</span>);</span><br></pre></td></tr></table></figure><p>ps: File.separator是File封装的静态字段，表示路径分隔符，因为在Windows和Linux系统分隔符不一样，所有如果用”/”在不同环境下就会报错，所以采用File.separator来表示分隔符，这是一个良好的代码编写习惯。</p><h3 id="2-File对象常用API"><a href="#2-File对象常用API" class="headerlink" title="2.File对象常用API"></a>2.File对象常用API</h3><p>File常见API没多少，如果不知道的可以自行百度一波，都是很简单的🤣。</p><h2 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h3><p>字节流一般用来操作媒体文件（媒体文件也是以字节存储的）</p><p><code>InputStream:</code>所有字节输入流的父类，具有基础的读方法<br><code>int read()</code>–读取一个字节，以int形式返回,如果返回值为-1，说明读到了文件的末尾<br><code>int read(byte[] b)</code>–尝试最多读取给定byte数组的长度个字节并存入该数组，返回值为实际读取到的自己量</p><p><code>OutPutStream:</code>是所有字节输出流的父类，具有基础的写出方法<br><code>void write(int d)</code>–写出一个字节<br><code>void write(byte[] d)</code>–将给定字节数组中的所有字节全部写出<br><code>void write(byte[] d,int off,int len)</code>–写出字节数组中从下标off开始的连续length个字节</p><h3 id="2-练习"><a href="#2-练习" class="headerlink" title="2.练习"></a>2.练习</h3><p>个人认为对于IO流的理解还是得靠代码，读懂代码才是王道。<br><code>Test:</code>复制一张图片F:\java_Demo\1.bmp到F:\java_Demo\2.bmp</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CopyPic</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;  </span><br><span class="line">        copyBmp();  </span><br><span class="line">        System.out.println(<span class="string">"复制完成"</span>);  </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyBmp</span><span class="params">()</span> </span>&#123;  </span><br><span class="line"></span><br><span class="line">        FileInputStream fis = <span class="keyword">null</span>;  </span><br><span class="line">        FileOutputStream fos = <span class="keyword">null</span>;  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">        <span class="comment">//写入流关联文件 </span></span><br><span class="line">            fis = <span class="keyword">new</span> FileInputStream(<span class="string">"F:"</span>+File.separator+<span class="string">"java_Demo"</span>+File.separator+<span class="string">"1.bmp"</span>); </span><br><span class="line">        <span class="comment">//读取流关联文件</span></span><br><span class="line">            fos = <span class="keyword">new</span> FileInputStream(<span class="string">"F:"</span>+File.separator+<span class="string">"java_Demo"</span>+File.separator+<span class="string">"2.bmp"</span>);  </span><br><span class="line">            <span class="keyword">byte</span>[] copy = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];  </span><br><span class="line">            <span class="keyword">int</span> len = <span class="number">0</span>;  </span><br><span class="line">            <span class="keyword">while</span>((len=fis.read(copy))!=-<span class="number">1</span>) &#123;  </span><br><span class="line">            fos.write(copy,<span class="number">0</span>,len);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">catch</span> (IOException e) &#123;  </span><br><span class="line">            e.printStackTrace();  </span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"复制文件异常"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">finally</span> &#123;  </span><br><span class="line">            <span class="keyword">try</span> &#123;  </span><br><span class="line">                <span class="keyword">if</span>(fis!=<span class="keyword">null</span>) fis.close();  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">catch</span> (IOException e) &#123;  </span><br><span class="line">                e.printStackTrace();  </span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"读取流"</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">          </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-字节流缓冲区"><a href="#3-字节流缓冲区" class="headerlink" title="3.字节流缓冲区"></a>3.字节流缓冲区</h3><p>BufferedInputStream,BufferedOutputStream<br>缓冲流的内部维护了一个缓冲区，每当向输入输出流读写数据时，会先将数据保存在缓冲区，当缓冲区满了以后，将数据一次性读写出来，这样可以减少IO操作的次数，从而提高读写效率</p><p><code>Demo:</code>使用缓冲输出流和缓冲输入流实现文件的复制</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SummaryBISAndBOS</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 1.先将文件中的内容读入到缓冲输入流中</span></span><br><span class="line"><span class="comment">         * 2.将输入流中的数据通过缓冲输出流写入到目标文件中</span></span><br><span class="line"><span class="comment">         * 3.关闭输入流和输出流</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">long</span> begin=System.currentTimeMillis();</span><br><span class="line">            FileInputStream fis=<span class="keyword">new</span> FileInputStream(<span class="string">"BISDemo.txt"</span>);</span><br><span class="line">            BufferedInputStream bis=<span class="keyword">new</span> BufferedInputStream(fis);</span><br><span class="line"></span><br><span class="line">            FileOutputStream fos=<span class="keyword">new</span> FileOutputStream(<span class="string">"BOSDemo.txt"</span>);</span><br><span class="line">            BufferedOutputStream bos=<span class="keyword">new</span> BufferedOutputStream(fos);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> size=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">byte</span>[] buffer=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">10240</span>];</span><br><span class="line">            <span class="keyword">while</span>((size=bis.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                bos.write(buffer, <span class="number">0</span>, size);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//刷新此缓冲的输出流，保证数据全部都能写出</span></span><br><span class="line">            bos.flush();</span><br><span class="line">            bis.close();</span><br><span class="line">            bos.close();</span><br><span class="line">            <span class="keyword">long</span> end=System.currentTimeMillis();</span><br><span class="line">            System.out.println(<span class="string">"使用缓冲输出流和缓冲输入流实现文件的复制完毕！耗时："</span>+(end-begin)+<span class="string">"毫秒"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h2><p>字符流以char为单位对数据进行读写，一次处理一个unicode，字符流的底层是基本的字节流。<br><code>Reader</code>是字符输入流的父类</p><p><code>int read()</code> –读取一个字符，这个int返回值可以转换为其对应的char型字符，如果返回-1，说明已经到达末尾<br><code>int read(char[] chars)</code> –从流中读取一个字符数组的length个字符并存入该数组，返回值为实际读取到的字符量</p><p>Writer是字符输出流的父类<br><code>void write(int c)</code> –写出一个字符<br><code>void write(char[] chs)</code> –将给定字符数组中的所有字符写出<br><code>void write(String str)</code> –将给定的字符串写出<br><code>void write(char[] chs,int off,int len)</code> –将给定字符数组中从off开始连续len个字符写出</p><h3 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h3><p><code>Test:</code> 用字符流拷贝文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CopyText</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;  </span><br><span class="line">        sop(<span class="string">"请输入要拷贝的文件的路径:"</span>);  </span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);  </span><br><span class="line">        String source = in.next();  </span><br><span class="line">        sop(<span class="string">"请输入需要拷贝到那个位置的路径以及生成的文件名:"</span>);  </span><br><span class="line">        String destination = in.next();  </span><br><span class="line">        in.close();  </span><br><span class="line">        CopyTextDemo(source,destination);  </span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/*****************文件Copy*********************/</span>  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">CopyTextDemo</span><span class="params">(String source,String destination)</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">        <span class="keyword">try</span> &#123;  </span><br><span class="line">            FileWriter fw = <span class="keyword">new</span> FileWriter(destination);  </span><br><span class="line">            FileReader fr = <span class="keyword">new</span> FileReader(source);  </span><br><span class="line">            <span class="keyword">char</span> []  buf = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];   </span><br><span class="line">            <span class="comment">//将Denmo中的文件读取到buf数组中。  </span></span><br><span class="line">            <span class="keyword">int</span> num = <span class="number">0</span>;      </span><br><span class="line">            <span class="keyword">while</span>((num = fr.read(buf))!=-<span class="number">1</span>) &#123;  </span><br><span class="line">                               <span class="comment">//String(char[] value , int offest,int count) 分配一个新的String,包含从offest开始的count个字符  </span></span><br><span class="line">                fw.write(<span class="keyword">new</span> String(buf,<span class="number">0</span>,num));  </span><br><span class="line">            &#125;  </span><br><span class="line">            fr.close();  </span><br><span class="line">            fw.close();  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">catch</span> (IOException e) &#123;  </span><br><span class="line">            sop(e.toString());  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">/**********************Println************************/</span>  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sop</span><span class="params">(Object obj)</span> </span>&#123;  </span><br><span class="line">        System.out.println(obj);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符流缓冲区"><a href="#字符流缓冲区" class="headerlink" title="字符流缓冲区"></a>字符流缓冲区</h3><p><code>BufferedReader</code>，<code>BufferedWriter</code> 作用及实现和字节流缓冲区大同小异。</p><p><code>Test:</code> BufferedReader示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BufferedReaderDemo</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  <span class="keyword">throws</span> IOException </span>&#123;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//创建一个字符读取流流对象，和文件关联  </span></span><br><span class="line">        FileReader rw = <span class="keyword">new</span> FileReader(<span class="string">"buf.txt"</span>);  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//只要将需要被提高效率的流作为参数传递给缓冲区的构造函数即可  </span></span><br><span class="line">        BufferedReader brw = <span class="keyword">new</span> BufferedReader(rw);  </span><br><span class="line">  </span><br><span class="line">          </span><br><span class="line">        <span class="keyword">for</span>(;;) &#123;  </span><br><span class="line">            String s = brw.readLine();  </span><br><span class="line">            <span class="keyword">if</span>(s==<span class="keyword">null</span>) <span class="keyword">break</span>;  </span><br><span class="line">            System.out.println(s);  </span><br><span class="line">        &#125;  </span><br><span class="line">          </span><br><span class="line">        brw.close();<span class="comment">//关闭输入流对象  </span></span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Test:</code> BufferedWriter示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BufferedWriterDemo</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  <span class="keyword">throws</span> IOException </span>&#123;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//创建一个字符写入流对象  </span></span><br><span class="line">        FileWriter fw = <span class="keyword">new</span> FileWriter(<span class="string">"buf.txt"</span>);  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//为了提高字符写入效率，加入了缓冲技术。  </span></span><br><span class="line">        <span class="comment">//只要将需要被提高效率的流作为参数传递给缓冲区的构造函数即可  </span></span><br><span class="line">        BufferedWriter bfw = <span class="keyword">new</span> BufferedWriter(fw);  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//bfw.write("abc\r\nde");  </span></span><br><span class="line">        <span class="comment">//bfw.newLine();               这行代码等价于bfw.write("\r\n"),相当于一个跨平台的换行符  </span></span><br><span class="line">        <span class="comment">//用到缓冲区就必须要刷新  </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> x = <span class="number">1</span>; x &lt; <span class="number">5</span>; x++) &#123;  </span><br><span class="line">            bfw.write(<span class="string">"abc"</span>);  </span><br><span class="line">            bfw.newLine();                  <span class="comment">//java提供了一个跨平台的换行符newLine();  </span></span><br><span class="line">            bfw.flush();  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">        bfw.flush();                                                <span class="comment">//刷新缓冲区  </span></span><br><span class="line">        bfw.close();                                                <span class="comment">//关闭缓冲区，但是必须要先刷新  </span></span><br><span class="line">  </span><br><span class="line">        <span class="comment">//注意，关闭缓冲区就是在关闭缓冲中的流对象  </span></span><br><span class="line">        fw.close();                                                 <span class="comment">//关闭输入流对象  </span></span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NIO"><a href="#NIO" class="headerlink" title="NIO"></a>NIO</h2><p>NIO 非阻塞IO(面向缓冲)<br>1.NIO弥补了原来I/O的不足之处，在IO操作中提供了高速度的，面向块的IO操作<br>2.NIO中数据的打包和传递方式是以块为单位的，普通IO中以流为操作单位</p><p>NIO的2个重要特性<br>(1)通道<br>通道(Channel)是对于普通I/O中流的模拟，从任何地方读数据，或将数据写到任何地方都必须通过一个Channel对象</p><p>(2)缓冲区<br>缓冲区Buffer实质上是一个容器对象，发送给一个通道的所有对象都必须首先放到缓冲区中；同样，从一个通道中读取数据时也需要先读取到缓冲区中。<br>在NIO中，所有数据都是用缓冲区进行处理的。</p><p>ps:NIO效率无疑是要大大的高于IO操作的，但是实现过程要比IO复杂的多，可自行百度学习。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>复习了一下以前学习的IO知识，写的不是很完善，因为写博客很花时间，我现在每天很忙😂，继续努力吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;Java中对于数据的操作都是通过流来实现的，而所有操作流的对象都在IO包中。所谓IO流其实是指，Input和Output流。&lt;br&gt;首先明白
      
    
    </summary>
    
      <category term="Java" scheme="http://marin.kim/categories/Java/"/>
    
    
      <category term="Java" scheme="http://marin.kim/tags/Java/"/>
    
      <category term="IO" scheme="http://marin.kim/tags/IO/"/>
    
  </entry>
  
  <entry>
    <title>仅以这篇博客记录我未来的编程生活</title>
    <link href="http://marin.kim/2018/03/25/firstBlog/"/>
    <id>http://marin.kim/2018/03/25/firstBlog/</id>
    <published>2018-03-25T13:57:42.266Z</published>
    <updated>2018-08-23T07:12:51.642Z</updated>
    
    <content type="html"><![CDATA[<h2 id="知识是一个不断积累的过程"><a href="#知识是一个不断积累的过程" class="headerlink" title="知识是一个不断积累的过程"></a>知识是一个不断积累的过程</h2><p>2015年开始进入大学接触编程先是学了C，然后是C#，现在主要在使用Java进行开发，还想学习Python。回想起之前的编程学习之路感觉自己学的多，忘记的更多😂，现在我想把我学习的知识记录下来，方便自己以后翻看。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#include&lt;stdio.h&gt;</span></span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello world!\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;知识是一个不断积累的过程&quot;&gt;&lt;a href=&quot;#知识是一个不断积累的过程&quot; class=&quot;headerlink&quot; title=&quot;知识是一个不断积累的过程&quot;&gt;&lt;/a&gt;知识是一个不断积累的过程&lt;/h2&gt;&lt;p&gt;2015年开始进入大学接触编程先是学了C，然后是C#，现在主
      
    
    </summary>
    
      <category term="Daily" scheme="http://marin.kim/categories/Daily/"/>
    
    
      <category term="Daily" scheme="http://marin.kim/tags/Daily/"/>
    
  </entry>
  
</feed>
